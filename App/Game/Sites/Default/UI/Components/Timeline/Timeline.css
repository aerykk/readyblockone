.c-timeline {
    display: flex;
    list-style: none;
    margin: -21px -21px 20px -20px;
    opacity: 0.8;
}

.c-timeline__item {
    flex: 1;
    color: #fff;
    padding: 30px 0;
    background: grey;
    text-transform: uppercase;
    font-size: 16px;
    font-weight: bold;
    text-align: right;
    padding-right: 20px;
    position: relative;
    background: grey url(/App/Game/Sites/Default/UI/Components/Timeline/Images/incompleted.png) no-repeat 80% 50%;
    background-size: contain;
    text-shadow: 1px 1px 1px #000;
    
    &.c--completed {
        background-image: url(/App/Game/Sites/Default/UI/Components/Timeline/Images/completed.png);
    }

    &.c--inprogress {
        background-image: url(/App/Game/Sites/Default/UI/Components/Timeline/Images/inprogress.png);
    }

    &.c--red {
        background-color: #D12313;
    }

    &.c--orange {
        background-color: #E66924;
    }

    &.c--yellow {
        background-color: #DEBD3D;
    }

    &.c--yellow {
        background-color: #DEBD3D;
    }

    &.c--green {
        background-color: #008835;
    }

    &.c--blue {
        background-color: #0066BC;
    }
}


.c-timeline__arrow {
    content: '';
    position: absolute;
    top: 0; 
    right: -40px;
    /*same dimension as the line-height of .breadcrumb a */
    width: 80px; 
    height: 80px;
    /*as you see the rotated square takes a larger height. which makes it tough to position it properly. So we are going to scale it down so that the diagonals become equal to the line-height of the link. We scale it to 70.7% because if square's: 
    length = 1; diagonal = (1^2 + 1^2)^0.5 = 1.414 (pythagoras theorem)
    if diagonal required = 1; length = 1/1.414 = 0.707*/
    transform: scale(0.707) rotate(45deg);
    /*we need to prevent the arrows from getting buried under the next link*/
    z-index: 1;
    border-radius: 0 5px 0 80px;
    background: grey;

    &.c--completed {
        display: block; /* TODO: remove hack to make react-look treat it as a different declaration */
    }

    &.c--red {
        background-color: #D12313;
        display: block; /* TODO: remove hack to make react-look treat it as a different declaration */
    }

    &.c--orange {
        background-color: #E66924;
        display: block; /* TODO: remove hack to make react-look treat it as a different declaration */
    }

    &.c--yellow {
        background-color: #DEBD3D;
        display: block; /* TODO: remove hack to make react-look treat it as a different declaration */
    }

    &.c--green {
        background-color: #008835;
        display: block; /* TODO: remove hack to make react-look treat it as a different declaration */
    }

    &.c--blue {
        background-color: #0066BC;
        display: block; /* TODO: remove hack to make react-look treat it as a different declaration */
    }
}

.c-timeline__arrow-last {
    content: none;
}